{"mappings":"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","sources":["src/js/showEnteredText.js","src/js/moveSingleLetter.js","src/js/selectSingleLetter.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/selectSettings.js","src/js/index.js"],"sourcesContent":["function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","function moveSingleLetter(letterElement) {\n  let isDragging = false;\n  let offsetX, offsetY;\n\n  letterElement.addEventListener('mousedown', event => {\n    isDragging = true;\n\n    // Сохраняем начальные координаты буквы и координаты указателя мыши\n    offsetX = event.clientX - letterElement.getBoundingClientRect().left;\n    offsetY = event.clientY - letterElement.getBoundingClientRect().top;\n\n    // Перемещаем букву в начальное положение\n    letterElement.style.position = 'absolute';\n    letterElement.style.zIndex = '1000';\n    document.body.appendChild(letterElement);\n    moveAt(event.pageX, event.pageY);\n  });\n\n  function moveAt(pageX, pageY) {\n    // Перемещаем букву на новые координаты\n    letterElement.style.left = pageX - offsetX + 'px';\n    letterElement.style.top = pageY - offsetY + 'px';\n  }\n\n  function onMouseMove(event) {\n    if (isDragging) {\n      // Перемещаем букву в соответствии с положением указателя мыши\n      moveAt(event.pageX, event.pageY);\n    }\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n\n  letterElement.addEventListener('mouseup', () => {\n    isDragging = false;\n  });\n\n  // Перемещаем букву в последнее место отпускания мыши при отпускании клавиши мыши\n  letterElement.addEventListener('mouseup', () => {\n    document.removeEventListener('mousemove', onMouseMove);\n  });\n}\n\nexport default moveSingleLetter;\n\n","import moveSingleLetter from \"./moveSingleLetter\";\n\nfunction selectSingleLetter(textField) {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n  }\n\n  return toggleSelection;\n}\n\nexport default selectSingleLetter;\n","function selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n","function createSelectionRect(startX, startY, textField) {\n  console.log('createSelectionRect initialized');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected-rect');\n      } else {\n        letter.classList.remove('selected-rect');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    \n    console.log('handleMouseDown called');\n    if (event.target.classList.contains('letter')) return;\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\nimport moveSingleLetter from './moveSingleLetter';\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\n\n  const togglSingleSelection = selectSingleLetter(textField);\n\ntextField.querySelectorAll('.letter').forEach(letter => {\n  letter.addEventListener('click', event => {\n    const target = event.target;\n    if (!event.ctrlKey && target.classList.contains('letter')) {\n      togglSingleSelection(target);\n      selectMultipleLetters(textField);\n      moveSingleLetter(letter)\n\n    } else {\n      createSelectionRect(0, 0, textField);\n    }\n  });\n});\n\n  \n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport default selectSettings;\n","import showEnteredText from './showEnteredText.js';\nimport selectSettings from './selectSettings';\n\n\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();\n \n  selectSettings();\n});\n"],"names":["$ee1258cdfdb10be9$export$2e2bcd8739ae039","input","document","getElementById","textField","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","letter","createElement","textContent","classList","add","appendChild","$f91c15ce0d1182ad$export$2e2bcd8739ae039","letterElement","offsetX","offsetY","isDragging","moveAt","pageX","pageY","style","left","top","onMouseMove","event","addEventListener","clientX","getBoundingClientRect","clientY","position","zIndex","body","removeEventListener","$e818855394d22686$export$2e2bcd8739ae039","selectedLetter","remove","toggle","contains","$00a5094cca4cb504$export$2e2bcd8739ae039","ctrlKey","target","$de94c5465e95ff5c$export$2e2bcd8739ae039","startX","startY","console","log","selectionRect","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","Math","min","abs","querySelectorAll","forEach","rect","max","right","bottom","$3f366115d0725b9c$export$2e2bcd8739ae039","$4df8b946f656a514$export$2e2bcd8739ae039","togglSingleSelection"],"version":3,"file":"index.efc55343.js.map"}