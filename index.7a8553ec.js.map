{"mappings":"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","sources":["src/js/showEnteredText.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/selectSettings.js","src/js/moveSelectedLetters.js","src/js/index.js","src/js/selectSingleLetter.js"],"sourcesContent":["function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","import { selectedLetters } from \"./selectSettings\";\nfunction selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n    if (letter.classList.contains('selected')) {\n      selectedLetters.add(letter); // Добавляем выделенную букву в коллекцию\n    } else {\n      selectedLetters.delete(letter); // Удаляем выделенную букву из коллекции\n    }\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n\n\n\n\n","function createSelectionRect(startX, startY, textField) {\n\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected-rect');\n      } else {\n        letter.classList.remove('selected-rect');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    \n    console.log('handleMouseDown called');\n    if (event.target.classList.contains('letter')) return;\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\nconst selectedLetters = new Set();\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\n\n  const { toggleSelection, selectedLetters } = selectSingleLetter(textField);\n \n  textField.querySelectorAll('.letter').forEach(letter => {\n    letter.addEventListener('click', event => {\n      const target = event.target;\n      if (!event.ctrlKey && target.classList.contains('letter')) {\n        toggleSelection(target);\n        selectMultipleLetters(textField);\n      } else {\n        createSelectionRect(0, 0, textField);\n      }\n    });\n  });\n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport { selectSettings, selectedLetters };","import { selectedLetters } from './selectSettings';\n\nfunction moveSelectedLetters() {\n  let isDragging = false;\n  let offsetX, offsetY;\n\n  // Обработчик события mousedown для начала перемещения букв\n  document.addEventListener('mousedown', event => {\n    const target = event.target;\n    if (selectedLetters.size > 0 && target.classList.contains('letter')) {\n      isDragging = true;\n\n      // Получаем начальные координаты букв и координаты указателя мыши\n      const rect = target.getBoundingClientRect();\n      offsetX = event.clientX - rect.left;\n      offsetY = event.clientY - rect.top;\n\n      // Перемещаем все выделенные буквы в начальное положение\n      selectedLetters.forEach(letter => {\n        letter.style.position = 'absolute';\n        letter.style.zIndex = '1000';\n        document.body.appendChild(letter);\n        moveAt(event.pageX, event.pageY, letter);\n      });\n    }\n  });\n\n  // Функция для перемещения букв в новые координаты\n  function moveAt(pageX, pageY, letter) {\n    letter.style.left = pageX - offsetX + 'px';\n    letter.style.top = pageY - offsetY + 'px';\n  }\n\n  // Обработчик события mousemove для перемещения букв\n  function onMouseMove(event) {\n    if (isDragging) {\n      selectedLetters.forEach(letter => {\n        moveAt(event.pageX, event.pageY, letter);\n      });\n    }\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n\n  // Обработчик события mouseup для завершения перемещения букв\n  document.addEventListener('mouseup', () => {\n    if (isDragging) {\n      isDragging = false;\n      document.removeEventListener('mousemove', onMouseMove);\n    }\n  });\n}\n\nexport default moveSelectedLetters;\n","import showEnteredText from './showEnteredText.js';\nimport { selectSettings } from './selectSettings';\nimport moveSelectedLetters from './moveSelectedLetters.js';\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();\n  selectSettings();\n  moveSelectedLetters(); \n});\n","import moveSingleLetter from './moveSingleLetter';\nimport { selectedLetters } from './selectSettings';\n\nfunction selectSingleLetter() {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    // Вместо добавления класса selected, вы можете поместить буквы в массив\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n      selectedLetters.delete(selectedLetter); // Удаление буквы из массива\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n    if (selectedLetter) {\n      selectedLetters.add(selectedLetter); // Добавление буквы в массив\n    }\n  }\nconsole.log(selectedLetters);\n  return {\n    toggleSelection,\n    selectedLetters,\n  };\n}\n\nexport default selectSingleLetter;\n\n"],"names":["$019146eb429cb9c7$export$2e2bcd8739ae039","input","document","getElementById","textField","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","letter","createElement","textContent","classList","add","appendChild","$409bb006dafca20e$export$2e2bcd8739ae039","addEventListener","event","ctrlKey","target","contains","toggle","$07ead117ed7dcce3$export$55cc78cf0dc5aa15","delete","$fbf1b83992f128db$export$2e2bcd8739ae039","startX","startY","selectionRect","style","position","left","top","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","clientX","clientY","Math","min","abs","querySelectorAll","forEach","rect","getBoundingClientRect","max","right","bottom","remove","console","log","removeEventListener","$8319fb872153d95b$export$2e2bcd8739ae039","Set","$2699bbbe531d3ad7$export$2e2bcd8739ae039","offsetX","offsetY","isDragging","moveAt","pageX","pageY","onMouseMove","size","zIndex","body","selectedLetter","toggleSelection","selectedLetters"],"version":3,"file":"index.7a8553ec.js.map"}