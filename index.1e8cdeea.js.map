{"mappings":"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","sources":["src/js/showEnteredText.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/selectSettings.js","src/js/selectSingleLetter.js","src/js/index.js"],"sourcesContent":["function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","function selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n","function createSelectionRect(startX, startY) {\n  const textField = document.querySelector('.text-field');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected');\n      } else {\n        letter.classList.remove('selected');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\nconsole.log('Select settings initialized');\n  const togglSingleSelection = selectSingleLetter(textField);\n\n    textField.addEventListener('click', event => {\n      console.log('Click event on .text-field');\n    const target = event.target;\n    if (!event.ctrlKey && target.classList.contains('letter')) {\n      togglSingleSelection(target);\n      selectMultipleLetters(textField);\n    } else {\n      createSelectionRect(0, 0, textField);\n    }\n  });\n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport default selectSettings;\n","function selectSingleLetter(textField) {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n  }\n\n  \n\n  return toggleSelection;\n}\n\nexport default selectSingleLetter;\n","import selectSingleLetter from './selectSingleLetter';\nimport showEnteredText from './showEnteredText.js';\nimport selectSettings from './selectSettings';\nimport createSelectionRect from './createSelectionRect';\n\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();selectSettings();\n});\n"],"names":["$019146eb429cb9c7$export$2e2bcd8739ae039","input","document","getElementById","textField","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","letter","createElement","textContent","classList","add","appendChild","$409bb006dafca20e$export$2e2bcd8739ae039","addEventListener","event","ctrlKey","target","contains","toggle","$fbf1b83992f128db$export$2e2bcd8739ae039","startX","startY","selectionRect","style","position","left","top","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","clientX","clientY","Math","min","abs","querySelectorAll","forEach","rect","getBoundingClientRect","max","right","bottom","remove","removeEventListener","$8319fb872153d95b$export$2e2bcd8739ae039","$07ead117ed7dcce3$export$2e2bcd8739ae039","console","log","selectedLetter","togglSingleSelection"],"version":3,"file":"index.1e8cdeea.js.map"}