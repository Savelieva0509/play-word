{"mappings":"IAgBAA,EAhBA,WACE,MAAMC,EAAQC,SAASC,eAAe,SAChCC,EAAYF,SAASG,cAAc,eAEnCC,EAAcL,EAAMM,MAAMC,cAEhCJ,EAAUK,UAAY,GAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IAAK,CAC3C,MAAME,EAASV,SAASW,cAAc,QACtCD,EAAOE,YAAcR,EAAYI,GACjCE,EAAOG,UAAUC,IAAI,UACrBZ,EAAUa,YAAYL,E,OCM1BM,EAlBA,SAA4Bd,GAC1B,IAAIe,EAAiB,KAcrB,OAZA,SAAyBP,GACA,OAAnBO,GAA2BA,IAAmBP,GAChDO,EAAeJ,UAAUK,OAAO,YAGlCR,EAAOG,UAAUM,OAAO,YAExBF,EAAiBP,EAAOG,UAAUO,SAAS,YAAcV,EAAS,I,OCKtEW,EAfA,SAA+BnB,GAY7BA,EAAUoB,iBAAiB,SAN3B,SAAyBC,GACnBA,EAAMC,SAAWD,EAAME,OAAOZ,UAAUO,SAAS,WACnCG,EAAME,OALjBZ,UAAUM,OAAO,W,SCiE5BO,EApEA,SAA6BC,EAAQC,EAAQ1B,GAC3C2B,QAAQC,IAAI,mCACZ,MAAMC,EAAgB/B,SAASW,cAAc,OAC7CoB,EAAclB,UAAUC,IAAI,kBAC5BiB,EAAcC,MAAMC,SAAW,WAC/BF,EAAcC,MAAME,KAAOP,EAAS,KACpCI,EAAcC,MAAMG,IAAMP,EAAS,KACnCG,EAAcC,MAAMI,MAAQ,IAC5BL,EAAcC,MAAMK,OAAS,IAC7BN,EAAcC,MAAMM,gBAAkB,gBACtCpC,EAAUa,YAAYgB,GAEtB,IAAIQ,GAA0B,EAC1BC,EAAc,CAAEC,EAAGd,EAAQe,EAAGd,GAC9Be,EAAY,CAAEF,EAAGd,EAAQe,EAAGd,GAqBhC,SAASgB,EAAgBrB,GACvB,IAAKgB,EAAyB,OAE9BI,EAAY,CAAEF,EAAGlB,EAAMsB,QAASH,EAAGnB,EAAMuB,SAEzC,MAAMV,EAAQO,EAAUF,EAAID,EAAYC,EAClCJ,EAASM,EAAUD,EAAIF,EAAYE,EACzCX,EAAcC,MAAME,KAAOa,KAAKC,IAAIR,EAAYC,EAAGE,EAAUF,GAAK,KAClEV,EAAcC,MAAMG,IAAMY,KAAKC,IAAIR,EAAYE,EAAGC,EAAUD,GAAK,KACjEX,EAAcC,MAAMI,MAAQW,KAAKE,IAAIb,GAAS,KAC9CL,EAAcC,MAAMK,OAASU,KAAKE,IAAIZ,GAAU,KA5BhCrC,SAASkD,iBAAiB,WAElCC,SAAQzC,IACd,MAAM0C,EAAO1C,EAAO2C,wBAGlBD,EAAKlB,KAAOa,KAAKO,IAAId,EAAYC,EAAGE,EAAUF,IAC9CW,EAAKG,MAAQR,KAAKC,IAAIR,EAAYC,EAAGE,EAAUF,IAC/CW,EAAKjB,IAAMY,KAAKO,IAAId,EAAYE,EAAGC,EAAUD,IAC7CU,EAAKI,OAAST,KAAKC,IAAIR,EAAYE,EAAGC,EAAUD,GAEhDhC,EAAOG,UAAUC,IAAI,iBAErBJ,EAAOG,UAAUK,OAAO,gBAAgB,G,CAkC9ChB,EAAUoB,iBAAiB,aAd3B,SAAyBC,GAEvBM,QAAQC,IAAI,0BACRP,EAAME,OAAOZ,UAAUO,SAAS,YACpCmB,GAA0B,EAC1BC,EAAc,CAAEC,EAAGlB,EAAMsB,QAASH,EAAGnB,EAAMuB,SAC3C9C,SAASsB,iBAAiB,YAAasB,G,IASzC5C,SAASsB,iBAAiB,WAN1B,WACEiB,GAA0B,EAC1BvC,SAASyD,oBAAoB,YAAab,E,SCtD9Cc,EAPA,SAAwBnC,EAAOrB,GAC7B,IAAKqB,EAAME,OAAOZ,UAAUO,SAAS,UAAW,CAC9BlB,EAAUgD,iBAAiB,WACnCC,SAAQzC,GAAUA,EAAOG,UAAUK,OAAO,a,OCyBtDyC,EAvBA,WACE,MAAMzD,EAAYF,SAASG,cAAc,eAC3C0B,QAAQC,IAAI,+BACV,MAAM8B,EAAuB5C,IAE3Bd,EAAUoB,iBAAiB,SAASC,IAClCM,QAAQC,IAAI,8BACd,MAAML,EAASF,EAAME,QAChBF,EAAMC,SAAWC,EAAOZ,UAAUO,SAAS,WAC9CwC,EAAqBnC,GACrBJ,EAAsBnB,IAEtBwB,EAAoB,EAAG,EAAGxB,EAAU,IAIxCF,SAASsB,iBAAiB,SAASC,IAC5BrB,EAAUkB,SAASG,EAAME,SAC5BiC,EAAenC,EAAOrB,EAAU,G,EClBlBF,SAASG,cAAc,WAC/BmB,iBAAiB,SAASC,IACpCzB,IAEA6D,GAAgB","sources":["src/js/showEnteredText.js","src/js/selectSingleLetter.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/selectSettings.js","src/js/index.js"],"sourcesContent":["function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","function selectSingleLetter(textField) {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n  }\n\n  \n\n  return toggleSelection;\n}\n\nexport default selectSingleLetter;\n","function selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n","function createSelectionRect(startX, startY, textField) {\n  console.log('createSelectionRect initialized');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected-rect');\n      } else {\n        letter.classList.remove('selected-rect');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    \n    console.log('handleMouseDown called');\n    if (event.target.classList.contains('letter')) return;\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\nconsole.log('Select settings initialized');\n  const togglSingleSelection = selectSingleLetter(textField);\n\n    textField.addEventListener('click', event => {\n      console.log('Click event on .text-field');\n    const target = event.target;\n    if (!event.ctrlKey && target.classList.contains('letter')) {\n      togglSingleSelection(target);\n      selectMultipleLetters(textField);\n    } else {\n      createSelectionRect(0, 0, textField);\n    }\n  });\n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport default selectSettings;\n","import showEnteredText from './showEnteredText.js';\nimport selectSettings from './selectSettings';\n\n\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();\n \n  selectSettings();\n});\n"],"names":["$ee1258cdfdb10be9$export$2e2bcd8739ae039","input","document","getElementById","textField","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","letter","createElement","textContent","classList","add","appendChild","$e818855394d22686$export$2e2bcd8739ae039","selectedLetter","remove","toggle","contains","$00a5094cca4cb504$export$2e2bcd8739ae039","addEventListener","event","ctrlKey","target","$de94c5465e95ff5c$export$2e2bcd8739ae039","startX","startY","console","log","selectionRect","style","position","left","top","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","clientX","clientY","Math","min","abs","querySelectorAll","forEach","rect","getBoundingClientRect","max","right","bottom","removeEventListener","$3f366115d0725b9c$export$2e2bcd8739ae039","$4df8b946f656a514$export$2e2bcd8739ae039","togglSingleSelection"],"version":3,"file":"index.9a60807a.js.map"}