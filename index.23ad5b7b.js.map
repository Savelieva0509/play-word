{"mappings":"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","sources":["src/js/showEnteredText.js","src/js/moveSingleLetter.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/index.js","src/js/selectSettings.js","src/js/selectSingleLetter.js"],"sourcesContent":["function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","function moveSingleLetter(letterElement) {\n  let isDragging = false;\n  let offsetX, offsetY;\n\n  letterElement.addEventListener('mousedown', event => {\n    isDragging = true;\n\n    // Сохраняем начальные координаты буквы и координаты указателя мыши\n    offsetX = event.clientX - letterElement.getBoundingClientRect().left;\n    offsetY = event.clientY - letterElement.getBoundingClientRect().top;\n\n    // Перемещаем букву в начальное положение\n    letterElement.style.position = 'absolute';\n    letterElement.style.zIndex = '1000';\n    document.body.appendChild(letterElement);\n    moveAt(event.pageX, event.pageY);\n  });\n\n  function moveAt(pageX, pageY) {\n    // Перемещаем букву на новые координаты\n    letterElement.style.left = pageX - offsetX + 'px';\n    letterElement.style.top = pageY - offsetY + 'px';\n  }\n\n  function onMouseMove(event) {\n    if (isDragging) {\n      // Перемещаем букву в соответствии с положением указателя мыши\n      moveAt(event.pageX, event.pageY);\n    }\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n\n  letterElement.addEventListener('mouseup', () => {\n    isDragging = false;\n  });\n\n  // Перемещаем букву в последнее место отпускания мыши при отпускании клавиши мыши\n  letterElement.addEventListener('mouseup', () => {\n    document.removeEventListener('mousemove', onMouseMove);\n  });\n}\n\nexport default moveSingleLetter;\n\n","function selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n","function createSelectionRect(startX, startY, textField) {\n  console.log('createSelectionRect initialized');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected-rect');\n      } else {\n        letter.classList.remove('selected-rect');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    \n    console.log('handleMouseDown called');\n    if (event.target.classList.contains('letter')) return;\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import showEnteredText from './showEnteredText.js';\nimport selectSettings from './selectSettings';\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();\n\n  selectSettings();\n});\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\nimport moveSingleLetter from './moveSingleLetter';\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\n\n  const togglSingleSelection = selectSingleLetter(textField);\n\ntextField.querySelectorAll('.letter').forEach(letter => {\n  letter.addEventListener('click', event => {\n    const target = event.target;\n    if (!event.ctrlKey && target.classList.contains('letter')) {\n      togglSingleSelection(target);\n      selectMultipleLetters(textField);\n      moveSingleLetter(letter)\n\n    } else {\n      createSelectionRect(0, 0, textField);\n    }\n  });\n});\n\n  \n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport default selectSettings;\n","import moveSingleLetter from './moveSingleLetter';\n\nfunction selectSingleLetter(textField) {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n    if (selectedLetter) {\n      moveSingleLetter(selectedLetter);\n    }\n  }\n\n  return toggleSelection;\n}\n\nexport default selectSingleLetter;\n"],"names":["$019146eb429cb9c7$export$2e2bcd8739ae039","input","document","getElementById","textField","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","letter","createElement","textContent","classList","add","appendChild","$5839b17ca230d3c7$export$2e2bcd8739ae039","letterElement","offsetX","offsetY","isDragging","moveAt","pageX","pageY","style","left","top","onMouseMove","event","addEventListener","clientX","getBoundingClientRect","clientY","position","zIndex","body","removeEventListener","$409bb006dafca20e$export$2e2bcd8739ae039","ctrlKey","target","contains","toggle","$fbf1b83992f128db$export$2e2bcd8739ae039","startX","startY","console","log","selectionRect","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","Math","min","abs","querySelectorAll","forEach","rect","max","right","bottom","remove","$8319fb872153d95b$export$2e2bcd8739ae039","selectedLetter","togglSingleSelection"],"version":3,"file":"index.23ad5b7b.js.map"}