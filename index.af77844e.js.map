{"mappings":"gBAiEAA,EAjEA,SAA6BC,EAAQC,GACnC,IAAMC,EAAYC,SAASC,cAAc,eACnCC,EAAgBF,SAASG,cAAc,OAC7CD,EAAcE,UAAUC,IAAI,kBAC5BH,EAAcI,MAAMC,SAAW,WAC/BL,EAAcI,MAAME,KAAOX,EAAS,KACpCK,EAAcI,MAAMG,IAAMX,EAAS,KACnCI,EAAcI,MAAMI,MAAQ,IAC5BR,EAAcI,MAAMK,OAAS,IAC7BT,EAAcI,MAAMM,gBAAkB,gBACtCb,EAAUc,YAAYX,GAEtB,IAAIY,GAA0B,EAC1BC,EAAc,CAAEC,EAAGnB,EAAQoB,EAAGnB,GAC9BoB,EAAY,CAAEF,EAAGnB,EAAQoB,EAAGnB,GAqBhC,SAASqB,EAAgBC,GACvB,GAAKN,EAAL,CAIA,IAAMJ,GAFNQ,EAAY,CAAEF,EAAGI,EAAMC,QAASJ,EAAGG,EAAME,UAEjBN,EAAID,EAAYC,EAClCL,EAASO,EAAUD,EAAIF,EAAYE,EACzCf,EAAcI,MAAME,KAAOe,KAAKC,IAAIT,EAAYC,EAAGE,EAAUF,GAAK,KAClEd,EAAcI,MAAMG,IAAMc,KAAKC,IAAIT,EAAYE,EAAGC,EAAUD,GAAK,KACjEf,EAAcI,MAAMI,MAAQa,KAAKE,IAAIf,GAAS,KAC9CR,EAAcI,MAAMK,OAASY,KAAKE,IAAId,GAAU,KA5BhCX,SAAS0B,iBAAiB,WAElCC,SAAQ,SAAAC,GACd,IAAMC,EAAOD,EAAOE,wBAGlBD,EAAKrB,KAAOe,KAAKQ,IAAIhB,EAAYC,EAAGE,EAAUF,IAC9Ca,EAAKG,MAAQT,KAAKC,IAAIT,EAAYC,EAAGE,EAAUF,IAC/Ca,EAAKpB,IAAMc,KAAKQ,IAAIhB,EAAYE,EAAGC,EAAUD,IAC7CY,EAAKI,OAASV,KAAKC,IAAIT,EAAYE,EAAGC,EAAUD,GAEhDW,EAAOxB,UAAUC,IAAI,YAErBuB,EAAOxB,UAAU8B,OAAO,W,GAME,C,CAyBhCnC,EAAUoC,iBAAiB,aAX3B,SAAyBf,GACvBN,GAA0B,EAC1BC,EAAc,CAAEC,EAAGI,EAAMC,QAASJ,EAAGG,EAAME,SAC3CtB,SAASmC,iBAAiB,YAAahB,E,IASzCnB,SAASmC,iBAAiB,WAN1B,WACErB,GAA0B,EAC1Bd,SAASoC,oBAAoB,YAAajB,E,SC1C9CkB,EAhBA,WACE,IAAMC,EAAQtC,SAASuC,eAAe,SAChCxC,EAAYC,SAASC,cAAc,eAEnCuC,EAAcF,EAAMG,MAAMC,cAEhC3C,EAAU4C,UAAY,GAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IAAK,CAC3C,IAAMhB,EAAS5B,SAASG,cAAc,QACtCyB,EAAOkB,YAAcN,EAAYI,GACjChB,EAAOxB,UAAUC,IAAI,UACrBN,EAAUc,YAAYe,E,GCLN5B,SAASC,cAAc,WAC/BkC,iBAAiB,SAAS,SAAAf,GACpCiB,IAIAzC,G","sources":["src/js/createSelectionRect.js","src/js/showEnteredText.js","src/js/index.js"],"sourcesContent":["function createSelectionRect(startX, startY) {\n  const textField = document.querySelector('.text-field');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected');\n      } else {\n        letter.classList.remove('selected');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport showEnteredText from './showEnteredText.js';\n\nlet isCreatingSelectionRect = false;\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();\n\n  // selectSingleLetter();\n  // selectMultipleLetters();\n  createSelectionRect();\n});\n"],"names":["$fbf1b83992f128db$export$2e2bcd8739ae039","startX","startY","textField","document","querySelector","selectionRect","createElement","classList","add","style","position","left","top","width","height","backgroundColor","appendChild","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","event","clientX","clientY","Math","min","abs","querySelectorAll","forEach","letter","rect","getBoundingClientRect","max","right","bottom","remove","addEventListener","removeEventListener","$019146eb429cb9c7$export$2e2bcd8739ae039","input","getElementById","enteredText","value","toLowerCase","innerHTML","i","length","textContent"],"version":3,"file":"index.af77844e.js.map"}