{"mappings":"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","sources":["src/js/selectSingleLetter.js","src/js/showEnteredText.js","src/js/selectMultipleLetters.js","src/js/createSelectionRect.js","src/js/clearSelection.js","src/js/selectSettings.js","src/js/index.js"],"sourcesContent":["function selectSingleLetter(textField) {\n  let selectedLetter = null;\n\n  function toggleSelection(letter) {\n    if (selectedLetter !== null && selectedLetter !== letter) {\n      selectedLetter.classList.remove('selected');\n    }\n\n    letter.classList.toggle('selected');\n\n    selectedLetter = letter.classList.contains('selected') ? letter : null;\n  }\n\n  \n\n  return toggleSelection;\n}\n\nexport default selectSingleLetter;\n","function showEnteredText() {\n  const input = document.getElementById('input');\n  const textField = document.querySelector('.text-field');\n\n  const enteredText = input.value.toLowerCase();\n\n  textField.innerHTML = '';\n\n  for (let i = 0; i < enteredText.length; i++) {\n    const letter = document.createElement('span');\n    letter.textContent = enteredText[i];\n    letter.classList.add('letter');\n    textField.appendChild(letter);\n  }\n}\n\nexport default showEnteredText;\n","function selectMultipleLetters(textField) {\n  \n  function toggleSelection(letter) {\n    letter.classList.toggle('selected');\n  }\n\n  function highlightLetter(event) {\n    if (event.ctrlKey && event.target.classList.contains('letter')) {\n      toggleSelection(event.target);\n    }\n  }\n\n  textField.addEventListener('click', highlightLetter);\n}\n\nexport default selectMultipleLetters;\n","function createSelectionRect(startX, startY) {\n  const textField = document.querySelector('.text-field');\n  const selectionRect = document.createElement('div');\n  selectionRect.classList.add('selection-rect');\n  selectionRect.style.position = 'absolute';\n  selectionRect.style.left = startX + 'px';\n  selectionRect.style.top = startY + 'px';\n  selectionRect.style.width = '0';\n  selectionRect.style.height = '0';\n  selectionRect.style.backgroundColor = 'rgba(0,0,0,0)'; // Цвет выделения\n  textField.appendChild(selectionRect);\n\n  let isCreatingSelectionRect = false;\n  let startCoords = { x: startX, y: startY };\n  let endCoords = { x: startX, y: startY };\n\n  function highlightText() {\n    const letters = document.querySelectorAll('.letter');\n\n    letters.forEach(letter => {\n      const rect = letter.getBoundingClientRect();\n\n      if (\n        rect.left < Math.max(startCoords.x, endCoords.x) &&\n        rect.right > Math.min(startCoords.x, endCoords.x) &&\n        rect.top < Math.max(startCoords.y, endCoords.y) &&\n        rect.bottom > Math.min(startCoords.y, endCoords.y)\n      ) {\n        letter.classList.add('selected');\n      } else {\n        letter.classList.remove('selected');\n      }\n    });\n  }\n\n  function updateSelection(event) {\n    if (!isCreatingSelectionRect) return;\n\n    endCoords = { x: event.clientX, y: event.clientY };\n\n    const width = endCoords.x - startCoords.x;\n    const height = endCoords.y - startCoords.y;\n    selectionRect.style.left = Math.min(startCoords.x, endCoords.x) + 'px';\n    selectionRect.style.top = Math.min(startCoords.y, endCoords.y) + 'px';\n    selectionRect.style.width = Math.abs(width) + 'px';\n    selectionRect.style.height = Math.abs(height) + 'px';\n\n    highlightText();\n  }\n\n  function handleMouseDown(event) {\n    isCreatingSelectionRect = true;\n    startCoords = { x: event.clientX, y: event.clientY };\n    document.addEventListener('mousemove', updateSelection);\n  }\n\n  function handleMouseUp() {\n    isCreatingSelectionRect = false;\n    document.removeEventListener('mousemove', updateSelection);\n  }\n\n  textField.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mouseup', handleMouseUp);\n}\n\nexport default createSelectionRect;\n","function clearSelection(event, textField) {\n  if (!event.target.classList.contains('letter')) {\n    const letters = textField.querySelectorAll('.letter');\n    letters.forEach(letter => letter.classList.remove('selected'));\n  }\n}\n\nexport default clearSelection;\n","import selectSingleLetter from './selectSingleLetter';\nimport selectMultipleLetters from './selectMultipleLetters';\nimport createSelectionRect from './createSelectionRect';\nimport clearSelection from './clearSelection';\n\nfunction selectSettings() {\n  const textField = document.querySelector('.text-field');\nconsole.log('Select settings initialized');\n  const togglSingleSelection = selectSingleLetter(textField);\n\n    textField.addEventListener('click', event => {\n      console.log('Click event on .text-field');\n    const target = event.target;\n    if (!event.ctrlKey && target.classList.contains('letter')) {\n      togglSingleSelection(target);\n      selectMultipleLetters(textField);\n    } else {\n      createSelectionRect(0, 0, textField);\n    }\n  });\n\n  document.addEventListener('click', event => {\n    if (!textField.contains(event.target)) {\n      clearSelection(event, textField);\n    }\n  });\n}\n\nexport default selectSettings;\n","import selectSingleLetter from './selectSingleLetter';\nimport showEnteredText from './showEnteredText.js';\nimport selectSettings from './selectSettings';\nimport createSelectionRect from './createSelectionRect';\n\n\nconst showTextBtn = document.querySelector('.button');\nshowTextBtn.addEventListener('click', event => {\n  showEnteredText();selectSettings();\n});\n"],"names":["$e818855394d22686$export$2e2bcd8739ae039","textField","selectedLetter","letter","classList","remove","toggle","contains","$ee1258cdfdb10be9$export$2e2bcd8739ae039","input","document","getElementById","querySelector","enteredText","value","toLowerCase","innerHTML","i","length","createElement","textContent","add","appendChild","$00a5094cca4cb504$export$2e2bcd8739ae039","addEventListener","event","ctrlKey","target","$de94c5465e95ff5c$export$2e2bcd8739ae039","startX","startY","selectionRect","style","position","left","top","width","height","backgroundColor","isCreatingSelectionRect","startCoords","x","y","endCoords","updateSelection","clientX","clientY","Math","min","abs","querySelectorAll","forEach","rect","getBoundingClientRect","max","right","bottom","removeEventListener","$3f366115d0725b9c$export$2e2bcd8739ae039","$4df8b946f656a514$export$2e2bcd8739ae039","console","log","togglSingleSelection"],"version":3,"file":"index.ecd2b9fd.js.map"}